version: "2"
services:
  deluge:
    image: linuxserver/deluge
    ports:
      - "8112/tcp:8112/tcp" # Web UI
      - "62958/tcp:62958/tcp" # Torrent
      - "62958/udp:62958/udp" # Torrent
      - "58846/tcp:58846/tcp" # Daemon
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/deluge:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
    env_file:
      - container.env
    restart: unless-stopped
  jackett:
    image: linuxserver/jackett
    ports:
      - "9117/tcp:9117/tcp" # Web UI http
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/jackett:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
    env_file:
      - container.env
    restart: unless-stopped
  sabnzbd:
    image: linuxserver/sabnzbd
    ports:
      - "8080/tcp:8080/tcp" # Web UI http
      - "9090/tcp:9090/tcp" # Web UI https
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/sabnzb:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
    env_file:
      - container.env
    restart: unless-stopped
  sonarr:
    image: linuxserver/sonarr
    ports:
      - "8989/tcp:8989/tcp" # Web UI http
      - "9898/tcp:9898/tcp" # Web UI https
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/sonarr:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
      - ${MEDIA_SERVER_LIBRARY_DIR}/tvshows:/tv
    env_file:
      - container.env
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr
    ports:
      - "7878/tcp:7878/tcp" # Web UI http
      - "8787/tcp:8787/tcp" # Web UI https
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/radarr:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
      - ${MEDIA_SERVER_LIBRARY_DIR}/movies:/movies
    env_file:
      - container.env
    restart: unless-stopped
  lidarr:
    image: linuxserver/lidarr
    ports:
      - "8686/tcp:8686/tcp" # Web UI http
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/lidarr:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
      - ${MEDIA_SERVER_LIBRARY_DIR}/music:/music
    env_file:
      - container.env
    restart: unless-stopped
  lazylibrarian:
    image: linuxserver/lazylibrarian
    ports:
      - "5299/tcp:5299/tcp" # Web UI
    volumes:
      - ${MEDIA_SERVER_CONFIG_DIR}/lazylibrarian:/config
      - ${MEDIA_SERVER_DOWNLOAD_DIR}:/downloads
      - ${MEDIA_SERVER_LIBRARY_DIR}/books:/books
    env_file:
      - container.env
    restart: unless-stopped
  plex:
    image: linuxserver/plex
    # Plex uses UPNP to open connections dynamically on request. These
    # connections use whichever port the UPNP server (usually the router) tells
    # it to. There is no way to know what these ports will be, nor any way to
    # allow Docker to open them dynamically. Therefore, host mode networking is
    # required.
    network_mode: "host"
    ports:
      - "32400/tcp:32400/tcp" # Web UI http
      - "1900/udp:1900/udp" # Plex DLNA Server
      - "3005/tcp:3005/tcp" # Plex Companion
      - "5353/udp:5353/udp" # older Bonjour/Avahi network discovery
      - "8324/tcp:8324/tcp" # controlling Plex for Roku via Plex Companion
      - "32410/udp:32410/udp" # current GDM network discovery
      - "32412/udp:32412/udp" # current GDM network discovery
      - "32413/udp:32413/udp" # current GDM network discovery
      - "32414/udp:32414/udp" # current GDM network discovery
      - "32469/tcp:32469/tcp" # Plex DLNA Server
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_SERVER_CONFIG_DIR}/plex:/config
      - ${MEDIA_SERVER_LIBRARY_DIR}/tvshows:/data/tvshows
      - ${MEDIA_SERVER_LIBRARY_DIR}/movies:/data/movies
      - ${MEDIA_SERVER_LIBRARY_DIR}/music:/data/music
      - ${MEDIA_SERVER_TMP_DIR}/transcode:/transcode
    env_file:
      - container.env
    environment:
      # - VERSION=latest # Use this version if you do not have a plexpass
      - VERSION=public # Use this version if you do have a plexpass
    restart: unless-stopped
